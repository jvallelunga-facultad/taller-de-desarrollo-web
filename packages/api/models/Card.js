'use strict';
const mongoose = require('mongoose');
const ReleatedCardObject = {
  id: String,
  object: String,
  component: String,
  name: String,
  type_line: String,
  uri: String
};
const CardFace = {
  artist: String,
  cmc: Number,
  color_identity: [String],
  colors: [String], 
  flavor_text: String,
  illustration_id: String,
  image_uris: {
    small: String,
    normal: String,
    large: String,
    png: String,
    art_crop: String,
    border_crop: String
  },
  layout: String,
  loyalty: String,
  mana_cost: String,
  name: String,
  object: String,
  oracle_id: String,
  oracle_text: String,
  power: String,
  printed_name: String,
  printed_text: String,
  printed_type_line: String,
  toughness: String,
  type_line: String,
  watermark: String,
}

const mySchema = mongoose.Schema(Object.assign(
  {},
  ReleatedCardObject,
  CardFace,
  // Gameplay Fields
  {
    arena_id: Number,
    lang: String,
    mtgo_id: Number,
    mtgo_foil_id: Number,
    multiverse_ids: [Number],
    tcgplayer_id: Number,
    tcgplayer_etched_id: Number,
    cardmarket_id: Number,
    oracle_id: String,
    prints_search_uri: String,
    rulings_uri: String,
    scryfall_uri: String,
    all_parts: [ReleatedCardObject],
    card_faces: [CardFace],
    color_indicator: [String],
    edhrec_rank: Number,
    hand_modifier: String,
    keywords: [String],
    legalities: {
      standard: String,
      future: String,
      historic: String,
      gladiator: String,
      pioneer: String,
      explorer: String,
      modern: String,
      legacy: String,
      pauper: String,
      vintage: String,
      penny: String,
      commander: String,
      brawl: String,
      historicbrawl: String,
      alchemy: String,
      paupercommander: String,
      duel: String,
      oldschool: String,
      premodern: String
    },
    life_modifier: String,
    oversized: Boolean,
    penny_rank: Number,
    produced_mana: [String],
    reserved: Boolean,
  },
  // Print Fields
  {
    booster: Boolean,
    border_color: String,
    card_back_id: String,
    collector_number: String,
    content_warning: Boolean,
    digital: Boolean,
    finishes: [String],
    flavor_name: String,
    frame_effects: [String],
    frame: String,
    full_art: Boolean,
    games: [String],
    highres_image: Boolean,
    image_status: String,
    prices: {
      usd: String,
      usd_foil: String,
      usd_etched: String,
      eur: String,
      eur_foil: String,
      tix: String,
    },
    promo: Boolean,
    promo_types: [String],
    // purchase_uris: {}, // ????
    rarity: String,
    related_uris: {
      gatherer: String,
      tcgplayer_infinite_articles: String,
      tcgplayer_infinite_decks: String,
      edhrec: String,
    },
    released_at: String,
    reprint: Boolean,
    scryfall_set_uri: String,
    set_name: String,
    set_search_uri: String,
    set_type: String,
    set_uri: String,
    set: String,
    set_id: String,
    story_spotlight: Boolean,
    textless: Boolean,
    variation: Boolean,
    variation_of: String,
    security_stamp: String,
    preview: {
      previewed_at: Date,
      source_uri: String,
      source: String,
    },
  }
));

/* global db */
module.exports = db.model('cards', mySchema);